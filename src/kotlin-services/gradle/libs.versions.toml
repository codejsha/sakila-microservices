[versions]
kotlin = "1.8.20"
kotlin-coroutines = "1.6.4"
spring-boot = "3.0.6"
spring-dependency = "1.1.0"
spring-security = "6.0.3"
spring-restdocs = "3.0.0"
axon = "4.7.3"
axon-extension = "4.7.0"
mapstruct = "1.5.4.Final"
jooq = "3.18.2"
jooq-gradle = "8.2"
log4j = "2.20.0"
asciidoctor = "3.3.2"
epages-restdocs = "0.17.1"

[libraries]
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
# kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }

reactor-kotlin = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version = "1.2.2" }
reactor-test = { module = "io.projectreactor:reactor-test", version = "3.5.5" }

spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
# spring-boot-hateoas = { module = "org.springframework.boot:spring-boot-starter-hateoas", version.ref = "spring-boot" }
spring-boot-data-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc", version.ref = "spring-boot" }
spring-boot-data-mongodb-reactive = { module = "org.springframework.boot:spring-boot-starter-data-mongodb-reactive", version.ref = "spring-boot" }
spring-boot-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
# spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
# spring-boot-oauth2 = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-apt = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
# spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security" }
# spring-restdocs-asciidoctor = { module = "org.springframework.restdocs:spring-restdocs-asciidoctor", version.ref = "spring-restdocs" }
# spring-restdocs-mockmvc = { module = "org.springframework.restdocs:spring-restdocs-mockmvc", version.ref = "spring-restdocs" }

axon-spring-boot = { module = "org.axonframework:axon-spring-boot-starter", version.ref = "axon" }
axon-reactor-spring-boot = { module = "org.axonframework.extensions.reactor:axon-reactor-spring-boot-starter", version.ref = "axon-extension" }
axon-kafka-spring-boot = { module = "org.axonframework.extensions.kafka:axon-kafka-spring-boot-starter", version.ref = "axon-extension" }
axon-mongo-spring-boot = { module = "org.axonframework.extensions.mongo:axon-mongo-spring-boot-starter", version.ref = "axon-extension" }
axon-micrometer = { module = "org.axonframework:axon-micrometer", version.ref = "axon" }
axon-test = { module = "org.axonframework:axon-test", version.ref = "axon" }

mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-apt = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

# jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
# jooq-kotlin = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
# jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
# jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }

# log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
# log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
# log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

# epages-restdocs-mockmvc = { module = "com.epages:restdocs-api-spec-mockmvc", version.ref = "epages-restdocs" }

guava = { module = "com.google.guava:guava", version = "31.1-jre" }
# conductor-client-spring = { module = "com.netflix.conductor:conductor-client-spring", version = "3.13.5" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version = "1.10.4" }
r2dbc-mysql = { module = "com.github.jasync-sql:jasync-r2dbc-mysql", version = "2.1.24" }

[bundles]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency = { id = "io.spring.dependency-management", version.ref = "spring-dependency" }
# jooq-gradle = { id = "nu.studer.jooq", version.ref = "jooq-gradle" }
# asciidoctor = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
# epages-restdocs = { id = "com.epages.restdocs-api-spec", version.ref = "epages-restdocs" }
