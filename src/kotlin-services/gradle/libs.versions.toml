[versions]
spring-boot = "3.1.4"
spring-management = "1.1.3"
kotlin = "1.8.22"
grpc = "1.56.1"
protobuf = "3.22.3"
protobuf-gradle = "0.9.1"
# mapstruct = "1.5.5.Final"

[libraries]
spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-json = { module = "org.springframework.boot:spring-boot-starter-json" }
spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-data-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc" }
spring-boot-data-redis-reactive = { module = "org.springframework.boot:spring-boot-starter-data-redis-reactive" }
#spring-boot-data-mongodb-reactive = { module = "org.springframework.boot:spring-boot-starter-data-mongodb-reactive" }
spring-boot-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
# spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security" }
# spring-boot-oauth2 = { module = "org.springframework.boot:spring-boot-starter-oauth2-client" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-apt = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
# spring-security-test = { module = "org.springframework.security:spring-security-test" }
# spring-restdocs-asciidoctor = { module = "org.springframework.restdocs:spring-restdocs-asciidoctor" }
# spring-restdocs-mockmvc = { module = "org.springframework.restdocs:spring-restdocs-mockmvc" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin" }
# kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core" }

reactor-kotlin = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
reactor-test = { module = "io.projectreactor:reactor-test" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }

grpc-bom = { module = "io.grpc:grpc-bom", version.ref = "grpc" }
grpc-netty-shaded = { module = "io.grpc:grpc-netty-shaded" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf" }
grpc-stub = { module = "io.grpc:grpc-stub" }
grpc-protoc-gen = { module = "io.grpc:protoc-gen-grpc-java" }
tomcat-annotations-api = { module = "org.apache.tomcat:annotations-api", version = "6.0.53" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

# mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
# mapstruct-apt = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

# guava = { module = "com.google.guava:guava", version = "32.1.1-jre" }
r2dbc-mysql = { module = "com.github.jasync-sql:jasync-r2dbc-mysql", version = "2.2.2" }
# epages-restdocs-mockmvc = { module = "com.epages:restdocs-api-spec-mockmvc", version = "0.17.1" }
# conductor-client-spring = { module = "com.netflix.conductor:conductor-client-spring", version = "3.13.5" }

[bundles]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-management = { id = "io.spring.dependency-management", version.ref = "spring-management" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
protobuf-gradle = { id = "com.google.protobuf", version.ref = "protobuf-gradle" }
# asciidoctor = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
# epages-restdocs = { id = "com.epages.restdocs-api-spec", version.ref = "epages-restdocs" }
