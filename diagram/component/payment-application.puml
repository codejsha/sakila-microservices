@startuml "payment-application"
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

AddElementTag("micro_service", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="black", $legendText="micro service\neight sided")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="black")

title Component diagram for Payment Application

Container(customer_app, "Customer Application", "Java, Spring Boot", "app", $tags = "micro_service")
Container(rental_app, "Rental Application", "Java, Spring Boot", "app", $tags = "micro_service")
Container(staff_app, "Staff Application", "Java, Spring Boot", "app", $tags = "micro_service")
System_Ext(ingress_gateway, "Ingress Gateway", "Istio Ingress Gateway")

Container_Boundary(payment_app, "Payment Application") {
    Component(command_adapter, "Payment Command Adapter", "REST Handler Adapter", "handler")
    Component(query_adapter, "Payment Query Adapter", "REST Handler Adapter", "handler")
    Component(payment_search_adapter, "Payment Search Adapter", "gRPC Adapter", "grpc")

    Component(payment_mgmt_service, "Payment Management Service", "Spring Bean", "service")
    Component(payment_search_service, "Payment Search Service", "Spring Bean", "service")

    Component(payment_repository, "Payment Repository", "R2DBC Repository", "repository")
    ComponentDb(payment_db, "Payment Database", "MySQL", "data", $tags = "storage")

    Rel(command_adapter, payment_mgmt_service, "Uses", "call")
    Rel(query_adapter, payment_search_service, "Uses", "call")
    Rel(payment_search_adapter, payment_search_service, "Uses", "call")

    Rel(payment_mgmt_service, payment_repository, "Uses", "call")
    Rel(payment_search_service, payment_repository, "Uses", "call")

    Rel_R(payment_repository, payment_db, "Reads from and writes to", "JDBC")
}

Rel(customer_app, payment_search_adapter, "Uses", "gRPC")
Rel(rental_app, payment_search_adapter, "Uses", "gRPC")
Rel(staff_app, payment_search_adapter, "Uses", "gRPC")
Rel(ingress_gateway, command_adapter, "Uses", "HTTP")
Rel(ingress_gateway, query_adapter, "Uses", "HTTP")

@enduml
